<?php

namespace api\modules\v1\models;

use api\helpers\Result;
use api\helpers\UserHelp;
use \yii\db\ActiveRecord;

/**
 * Country Model
 *
 * @author Budi Irawan <deerawan@gmail.com>
 */
class TripFav extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ts_fav_trip';
    }

    /**
     * @inheritdoc
     */
    public static function primaryKey()
    {
        return ['id'];
    }

    /**
     * Define rules for validation
     */
    public function rules()
    {
        return [
            [['user_id', 'trip_id', 'created', 'updated', 'state_no'], 'integer'],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->updated = $this->created = time();

    }

    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function getTrip()
    {
        return $this->hasOne(Trip::className(), ['id' => 'trip_id']);
    }

    public static function change($user_id, $trip_id, $fav = 1)
    {
        if ($fav) {
            $trip = self::findOne(['trip_id' => $trip_id, 'user_id' => $user_id, 'state_no' => $fav]);
            if ($trip) {
                return Result::Error('You have already added this trip to Your Favorite List');
            }
        }
        $trip = self::findOne(['trip_id' => $trip_id, 'user_id' => $user_id]);

        if (!$trip) {
            $trip = new self();
            $trip->user_id = $user_id;
            $trip->trip_id = $trip_id;
        }
        $trip->state_no = $fav;
        $trip->updated = time();
        $trip->save();

        if ($trip->errors) {
            return Result::Error('db error');
        }
        return Result::Success([]);

    }

    public static function getCount($trip_id)
    {
        $count = self::find()
            ->andWhere(['trip_id' => $trip_id, 'state_no' => 1])
            ->count();
        return $count;

    }


}
