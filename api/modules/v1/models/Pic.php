<?php

namespace api\modules\v1\models;

use api\helpers\UserHelp;
use \yii\db\ActiveRecord;
use yii\helpers\Url;

/**
 * Country Model
 *
 * @author Budi Irawan <deerawan@gmail.com>
 */
class Pic extends ActiveRecord
{
    const TMP_Path = '/files/tmp/';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ts_pic';
    }

    /**
     * @inheritdoc
     */
    public static function primaryKey()
    {
        return ['id'];
    }

    /**
     * Define rules for validation
     */
    public function rules()
    {
        return [
            ['md5val', 'string', 'max' => 255],
            [['user_id', 'parent_id', 'created', 'updated', 'type_no', 'filesize', 'width', 'height'], 'integer'],
            ['ext', 'in', 'range' => ['jpg', 'gif', 'png']],
            ['state', 'in', 'range' => ['pending', 'active', 'disabled']]
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->state = 'pending';
        $this->updated = $this->created = time();

    }

    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public static function copyJpg($src_file, $dst_file, $jpeg_quality = 80)
    {
        list($src_width, $src_height, $type, $attr) = getimagesize($src_file);
        switch ($type) {
            case 1:
                $src_img = @ImageCreateFromGIF($src_file);
                break;
            case 2:
                $src_img = @ImageCreateFromJPEG($src_file);
                break;
            case 3:
                $src_img = @ImageCreateFromPNG($src_file);
                break;
            default:
                return false;
        }
        $success = imageJPEG($src_img, $dst_file, $jpeg_quality);
        imagedestroy($src_img);
        return $success;
    }

    public static function getUrlById($id,$file = 'trip')
    {
        if ($id <= 0) return Url::to('@web' . '/img/'.$file.'-1024.jpg', true);

        $pic = self::findOne($id);

        if (!$pic:: $pic->state == 'disabled') {
            return null;
        }
        $tmp_path = self::TMP_Path . substr($pic->md5val, 0, 2) . '/' . substr($pic->md5val, 2, 2);
        $url = Url::to('@web' . $tmp_path . '/' . $pic->md5val . '-' . $pic->filesize . '.jpg', true);

        return $url;
    }


}
